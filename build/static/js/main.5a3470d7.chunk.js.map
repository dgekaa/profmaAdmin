{"version":3,"sources":["query.js","constants.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY","body","origin_data","Promise","resolve","fetch","method","mode","JSON","stringify","headers","Button","styled","Link","TrInner","div","TableAppointments","props","id","useParams","useState","USER","setUser","email","setEmail","useEffect","query","then","res","json","data","user","client_appointments","length","master_appointments","catch","err","alert","fluid","className","small","style","boxShadow","fontWeight","fontSize","scope","map","el","index","client","profile","name","master","date","time","slice","status","offers","i","service","price_by_pack","duration","price","Tables","DATA","type","about_me","city","to","params","testvalue","Header","LeftMenu","LeftMenuHeader","TableWrap","active","App","clickedBtn","setClickedBtn","setDATA","loadUsers","usersType","users","onClick","exact","path","Table","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a3470d7.chunk.js","sourcesContent":["import { PATH } from \"./constants\";\r\n\r\nconst QUERY = (body, origin_data) => {\r\n  return Promise.resolve(\r\n    fetch(`${PATH}`, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        // \"Access-Control-Allow-Origin\": \"https://backend.partylive.by\",\r\n        \"Content-Type\": \"application/json\",\r\n        // Authorization: origin_data ? \"Bearer \" + origin_data : \"\",\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport default QUERY;\r\n","export const PATH = \"http://194.87.145.192/graphql\";\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport QUERY from \"./query\";\r\n\r\nconst Button = styled(Link)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 20px;\r\n    color: #3d5170;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    color: #3d5170;\r\n    &:hover {\r\n      text-decoration: none;\r\n      background-color: #fbfbfb;\r\n      color: #007bff;\r\n    }\r\n  `,\r\n  HeaderTable = styled.div`\r\n    display: flex;\r\n    font-size: 14px;\r\n    flex-direction: row;\r\n  `,\r\n  TableTopText = styled.div`\r\n    margin-right: 20px;\r\n    color: #000;\r\n    font-weight: 700;\r\n  `,\r\n  TrInner = styled.div`\r\n    &:nth-child(odd) {\r\n      background-color: rgba(0, 0, 0, 0.03);\r\n    }\r\n    display: flex;\r\n    font-size: 14px;\r\n    flex-direction: row;\r\n  `;\r\n\r\nconst Tables = ({ length, DATA }) => {\r\n  return (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n      <Row>\r\n        <Col>\r\n          <Card\r\n            small\r\n            className=\"mb-4\"\r\n            style={{ boxShadow: \"0 0 10px 1px rgba(0,0,0,0.2)\" }}\r\n          >\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\" style={{ fontWeight: 700, fontSize: \"25px\" }}>\r\n                {DATA && DATA.length\r\n                  ? DATA[0].type === \"Master\"\r\n                    ? \"Таблица мастеров\"\r\n                    : \"Таблица клиентов\"\r\n                  : \"...\"}{\" \"}\r\n                {length ? \"(\" + length + \")\" : null}\r\n              </h6>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n              <table className=\"table mb-0\">\r\n                <thead className=\"bg-light\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Id\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Name\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      About me\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Email\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      City\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Appointments\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                {DATA && !!DATA.length && (\r\n                  <tbody>\r\n                    {DATA.map((el, index) => (\r\n                      <tr key={index}>\r\n                        <td>{el.id}</td>\r\n                        <td>\r\n                          {el.profile\r\n                            ? el.profile.name\r\n                              ? el.profile.name\r\n                              : \"-\"\r\n                            : \"-\"}\r\n                        </td>\r\n                        <td>\r\n                          {el.profile\r\n                            ? el.profile.about_me\r\n                              ? el.profile.about_me\r\n                              : \"-\"\r\n                            : \"-\"}\r\n                        </td>\r\n                        <td>{el.email}</td>\r\n                        <td>\r\n                          {el.profile\r\n                            ? el.profile.city\r\n                              ? el.profile.city.name\r\n                              : \"-\"\r\n                            : \"-\"}\r\n                        </td>\r\n                        <td>\r\n                          <Button\r\n                            to={`/appointments/${el.id}`}\r\n                            params={{ testvalue: \"hello\" }}\r\n                          >\r\n                            {el.client_appointments.length !== 0 ||\r\n                            el.master_appointments.length !== 0\r\n                              ? el.client_appointments.length ||\r\n                                el.master_appointments.length\r\n                              : \"-\"}\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                )}\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const TableAppointments = (props) => {\r\n  const { id } = useParams();\r\n\r\n  const [USER, setUser] = useState([]),\r\n    [email, setEmail] = useState(\"\");\r\n\r\n  const loadUser = () => {\r\n    QUERY({\r\n      query: `query {user (id: ${id}) { \r\n          id type email\r\n          master_appointments {\r\n            id date time status\r\n            offers {\r\n              description price_by_pack {duration price}\r\n              service {id name specialization {id name} photos {src}}\r\n            }\r\n            client {\r\n              profile {\r\n                name email\r\n              }\r\n            }\r\n          }\r\n          client_appointments {\r\n            id date time status\r\n            offers {\r\n              description price_by_pack {duration price}\r\n              service {id name specialization {id name} photos {src}}\r\n            }\r\n            master {\r\n              profile {\r\n                name email\r\n              }\r\n            }\r\n          }\r\n       \r\n      }}`,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.data.user.client_appointments.length) {\r\n          setUser(data.data.user.client_appointments);\r\n        }\r\n        if (data.data.user.master_appointments.length) {\r\n          setUser(data.data.user.master_appointments);\r\n        }\r\n        setEmail(data.data.user.email);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  return (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n      <Row>\r\n        <Col>\r\n          <Card\r\n            small\r\n            className=\"mb-4\"\r\n            style={{ boxShadow: \"0 0 10px 1px rgba(0,0,0,0.2)\" }}\r\n          >\r\n            <CardHeader\r\n              className=\"border-bottom\"\r\n              style={{ fontWeight: 700, fontSize: \"25px\" }}\r\n            >\r\n              Appointments {email}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n              <table className=\"table mb-0\">\r\n                <thead className=\"bg-light\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Id\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Master/client\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Date\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Time\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Status\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Offers\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {!!USER.length &&\r\n                    USER.map((el, index) => (\r\n                      <tr key={index}>\r\n                        <td>{el.id}</td>\r\n                        <td>\r\n                          {el.client\r\n                            ? el.client.profile\r\n                              ? el.client.profile.name\r\n                              : \"-\"\r\n                            : el.master.profile\r\n                            ? el.master.profile.name\r\n                            : \"-\"}\r\n                        </td>\r\n                        <td>{el.date}</td>\r\n                        <td>{el.time.slice(0, 5)}</td>\r\n                        <td>{el.status}</td>\r\n                        <td>\r\n                          {el.offers.length\r\n                            ? el.offers.map((el, i) => (\r\n                                <TrInner>\r\n                                  <td scope=\"col\" className=\"border-0\">\r\n                                    {el.service.name}\r\n                                  </td>\r\n                                  <td scope=\"col\" className=\"border-0\">\r\n                                    {el.price_by_pack.duration} мин.\r\n                                  </td>\r\n                                  <td scope=\"col\" className=\"border-0\">\r\n                                    {el.price_by_pack.price} руб.\r\n                                  </td>\r\n                                </TrInner>\r\n                              ))\r\n                            : \"-\"}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport QUERY from \"./query\";\r\nimport Table, { TableAppointments } from \"./Table\";\r\nimport { Switch, Route, BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nconst Header = styled.div`\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    top: 0;\r\n    right: 0;\r\n    left: 200px;\r\n    height: 49px;\r\n    padding-right: 20px;\r\n    color: #999;\r\n    background-color: #fff;\r\n    width: calc(100% - 200px);\r\n    box-shadow: 0 0.125rem 0.625rem rgb(90 97 105 / 12%);\r\n  `,\r\n  LeftMenu = styled.div`\r\n    background-color: #fff;\r\n    position: fixed;\r\n    width: 200px;\r\n    height: 100vh;\r\n    box-shadow: 0 0.125rem 9.375rem rgb(90 97 105 / 10%),\r\n      0 0.25rem 0.5rem rgb(90 97 105 / 12%),\r\n      0 0.9375rem 1.375rem rgb(90 97 105 / 10%),\r\n      0 0.4375rem 2.1875rem rgb(165 182 201 / 10%);\r\n  `,\r\n  LeftMenuHeader = styled(Link)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #5a6169;\r\n    font-weight: 500;\r\n    height: 50px;\r\n    border-bottom: 1px solid #e1e5eb;\r\n    font-size: 25px;\r\n    &:hover {\r\n      text-decoration: none;\r\n      color: #5a6169;\r\n    }\r\n  `,\r\n  TableWrap = styled.div`\r\n    z-index: 0;\r\n    display: flex;\r\n    flex: 1;\r\n    padding-top: 75px;\r\n    margin-left: 200px;\r\n  `,\r\n  Button = styled(Link)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    color: #3d5170;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    background-color: ${(props) => (props.active ? \"#fbfbfb\" : \"#fff\")};\r\n    color: ${(props) => (props.active ? \"#007bff\" : \"#3d5170\")};\r\n    box-shadow: ${(props) =>\r\n      props.active ? \"inset 0.1875rem 0 0 #007bff\" : null};\r\n    &:hover {\r\n      text-decoration: none;\r\n      transition: 0.2s ease all;\r\n      box-shadow: inset 0.1875rem 0 0 #007bff;\r\n      background-color: #fbfbfb;\r\n      color: #007bff;\r\n    }\r\n  `;\r\n\r\nconst App = () => {\r\n  const type = { Master: \"Master\", Client: \"Client\" };\r\n\r\n  const [clickedBtn, setClickedBtn] = useState(\"\"),\r\n    [DATA, setDATA] = useState([]);\r\n\r\n  const loadUsers = (usersType) => {\r\n    QUERY({\r\n      query: `query {users (type: ${usersType}, first:${100}) { \r\n        data { \r\n          id type email\r\n          profile {id city {id name} name email about_me}\r\n          master_appointments {\r\n            id\r\n          }\r\n          client_appointments {\r\n            id \r\n          }\r\n        } \r\n      }}`,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setDATA(data.data.users.data);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"error\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setClickedBtn(\"clients\");\r\n    loadUsers(type.Client);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <LeftMenu>\r\n            <LeftMenuHeader to={\"/\"}>Profma</LeftMenuHeader>\r\n            <Button\r\n              to={\"/\"}\r\n              active={clickedBtn === \"clients\"}\r\n              onClick={() => {\r\n                setClickedBtn(\"clients\");\r\n                loadUsers(type.Client);\r\n              }}\r\n            >\r\n              Клиенты\r\n            </Button>\r\n            <Button\r\n              to={\"/\"}\r\n              active={clickedBtn === \"masters\"}\r\n              onClick={() => {\r\n                setClickedBtn(\"masters\");\r\n                loadUsers(type.Master);\r\n              }}\r\n            >\r\n              Мастера\r\n            </Button>\r\n          </LeftMenu>\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <TableWrap>\r\n                <Table length={DATA.length} DATA={DATA} />\r\n              </TableWrap>\r\n            </Route>\r\n            <Route path=\"/appointments/:id\">\r\n              <TableWrap>\r\n                <TableAppointments length={DATA.length} DATA={DATA} />\r\n              </TableWrap>\r\n            </Route>\r\n          </Switch>\r\n          <Header>Админка PROFMA</Header>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}
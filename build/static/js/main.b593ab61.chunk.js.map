{"version":3,"sources":["query.js","constants.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY","body","origin_data","Promise","resolve","fetch","method","mode","JSON","stringify","headers","Button","styled","div","HeaderTable","TableTopText","TrInner","Tables","length","DATA","useState","selectedUser","setSelectedUser","modalShow","setModalShow","MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","profile","name","email","Body","className","scope","map","el","index","client","master","date","time","slice","status","offers","i","service","price_by_pack","duration","price","fluid","small","style","boxShadow","type","about_me","city","onClick","client_appointments","master_appointments","show","onHide","HeaderWrap","LeftMenu","LeftMenuHeader","UnderLeftMenu","Wrapper","TableWrap","active","App","clickedBtn","setClickedBtn","setDATA","loadUsers","usersType","query","then","res","json","data","users","catch","err","alert","useEffect","Table","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAiBeA,EAfD,SAACC,EAAMC,GACnB,OAAOC,QAAQC,QACbC,MAAM,GAAD,OCJW,iCDIC,CACfC,OAAQ,OACRC,KAAM,OACNN,KAAMO,KAAKC,UAAUR,GACrBS,QAAS,CAEP,eAAgB,wB,gCELlBC,EAASC,IAAOC,IAAV,mSAcVC,EAAcF,IAAOC,IAAV,kGAKXE,EAAeH,IAAOC,IAAV,gGAKZG,EAAUJ,IAAOC,IAAV,+KAqNMI,EA5MA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACxB,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,OAC8BF,oBAAS,GADvC,mBACGG,EADH,KACcC,EADd,KAGMC,EAA4B,SAACC,GAAD,OAChC,eAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAJV,UAME,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACL,EAAA,EAAMM,MAAP,CAAaC,GAAG,gCAAhB,SACE,eAACpB,EAAD,WACE,cAACC,EAAD,2BACA,eAACA,EAAD,sBAAuBM,EAAaa,MACpC,eAACnB,EAAD,oBACSM,EAAac,QAAUd,EAAac,QAAQC,KAAO,OAE5D,eAACrB,EAAD,qBACUM,EAAac,QAAUd,EAAac,QAAQE,MAAQ,cAKpE,cAACV,EAAA,EAAMW,KAAP,UACE,wBAAOC,UAAU,aAAjB,UACE,uBAAOA,UAAU,WAAjB,SACE,+BACE,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,gBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,2BAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,kBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,kBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,oBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,yBAKJ,kCACKhB,KACCA,EAAUL,QACZK,EAAUkB,KAAI,SAACC,EAAIC,GAAL,OACZ,+BACE,6BAAKD,EAAGR,KACR,6BACGQ,EAAGE,OACAF,EAAGE,OAAOT,QACRO,EAAGE,OAAOT,QAAQC,KAClB,IACFM,EAAGG,OAAOV,QACVO,EAAGG,OAAOV,QAAQC,KAClB,MAEN,6BAAKM,EAAGI,OACR,6BAAKJ,EAAGK,KAAKC,MAAM,EAAG,KACtB,6BAAKN,EAAGO,SACR,6BACGP,EAAGQ,OAAOhC,OACPwB,EAAGQ,OAAOT,KAAI,SAACC,EAAIS,GAAL,OACZ,eAACnC,EAAD,WACE,oBAAIwB,MAAM,MAAMD,UAAU,WAA1B,SACGG,EAAGU,QAAQhB,OAEd,qBAAII,MAAM,MAAMD,UAAU,WAA1B,UACGG,EAAGW,cAAcC,SADpB,0BAGA,qBAAId,MAAM,MAAMD,UAAU,WAA1B,UACGG,EAAGW,cAAcE,MADpB,gCAKJ,wBAUtB,OACE,eAAC,IAAD,CAAWC,OAAK,EAACjB,UAAU,8BAA3B,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CACEkB,OAAK,EACLlB,UAAU,OACVmB,MAAO,CAAEC,UAAW,gCAHtB,UAKE,cAAC,IAAD,CAAYpB,UAAU,gBAAtB,SACE,qBAAIA,UAAU,MAAd,UACGpB,GAAQA,EAAKD,OACO,WAAjBC,EAAK,GAAGyC,KACN,8FACA,8FACF,MAAO,IACV1C,EAAS,IAAMA,EAAS,IAAM,UAGnC,cAAC,IAAD,CAAUqB,UAAU,WAApB,SACE,wBAAOA,UAAU,aAAjB,UACE,uBAAOA,UAAU,WAAjB,SACE,+BACE,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,gBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,kBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,sBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,mBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,kBAGA,oBAAIC,MAAM,MAAMD,UAAU,WAA1B,+BAKHpB,KAAUA,EAAKD,QACd,gCACGC,EAAKsB,KAAI,SAACC,EAAIC,GAAL,OACR,+BACE,6BAAKD,EAAGR,KACR,6BACGQ,EAAGP,SACAO,EAAGP,QAAQC,KACTM,EAAGP,QAAQC,KAEb,MAEN,6BACGM,EAAGP,SACAO,EAAGP,QAAQ0B,SACTnB,EAAGP,QAAQ0B,SAEb,MAEN,6BACGnB,EAAGP,SACAO,EAAGP,QAAQE,MACTK,EAAGP,QAAQE,MAEb,MAEN,6BACGK,EAAGP,SACAO,EAAGP,QAAQ2B,KACTpB,EAAGP,QAAQ2B,KAAK1B,KAElB,MAEN,6BACE,cAACzB,EAAD,CACEoD,QAAS,WACPvC,EACoC,IAAlCkB,EAAGsB,oBAAoB9C,OACnBwB,EAAGsB,oBACHtB,EAAGuB,qBAET3C,EAAgBoB,IAPpB,SAUqC,IAAlCA,EAAGsB,oBAAoB9C,QACU,IAAlCwB,EAAGuB,oBAAoB/C,OACnBwB,EAAGsB,oBAAoB9C,QACvBwB,EAAGuB,oBAAoB/C,OACvB,UA7CDyB,oBA0DzB,cAAClB,EAAD,CACEyC,KAAM3C,EACN4C,OAAQ,kBAAM3C,GAAa,UCtO7BO,EAASnB,IAAOC,IAAV,uWAeVuD,EAAaxD,IAAOC,IAAV,oKAUVwD,EAAWzD,IAAOC,IAAV,wUAURyD,EAAiB1D,IAAOC,IAAV,sOAUd0D,EAAgB3D,IAAOC,IAAV,qEAIb2D,EAAU5D,IAAOC,IAAV,4GAKP4D,EAAY7D,IAAOC,IAAV,mHAMTF,EAASC,IAAOC,IAAV,maAQgB,SAACa,GAAD,OAAYA,EAAMgD,OAAS,UAAY,UAClD,SAAChD,GAAD,OAAYA,EAAMgD,OAAS,UAAY,aAClC,SAAChD,GAAD,OACZA,EAAMgD,OAAS,8BAAgC,QA+LtCC,EAtLH,WACV,IAAMf,EAAiB,SAAjBA,EAAmC,SACzC,EAAoCxC,mBAAS,IAA7C,mBAAOwD,EAAP,KAAmBC,EAAnB,OACoBzD,mBAAS,IAD7B,mBACGD,EADH,KACS2D,EADT,KAGMC,EAAY,SAACC,GACjBhF,EAAM,CACJiF,MAAM,uBAAD,OAAyBD,EAAzB,WAA6C,IAA7C,+zBA+BJE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLP,EAAQO,EAAKA,KAAKC,MAAMD,SAEzBE,OAAM,SAACC,GACNC,MAAM,aASZ,OALAC,qBAAU,WACRb,EAAc,WACdE,EAAUnB,KACT,IAGD,qBAAKrB,UAAU,MAAf,SACE,eAACiC,EAAD,WACE,eAACH,EAAD,WACE,cAACC,EAAD,qBAEA,cAAC,EAAD,CACEI,OAAuB,YAAfE,EACRb,QAAS,WACPc,EAAc,WACdE,EAAUnB,IAJd,wDASA,cAAC,EAAD,CACEc,OAAuB,YAAfE,EACRb,QAAS,WACPc,EAAc,WACdE,EAAUnB,IAJd,2DAUF,cAACW,EAAD,IACA,eAACE,EAAD,WACE,cAACL,EAAD,UACE,cAACrC,EAAD,kEAEF,cAAC4D,EAAD,CAAOzE,OAAQC,EAAKD,OAAQC,KAAMA,aC5J7ByE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,K","file":"static/js/main.b593ab61.chunk.js","sourcesContent":["import { PATH } from \"./constants\";\r\n\r\nconst QUERY = (body, origin_data) => {\r\n  return Promise.resolve(\r\n    fetch(`${PATH}`, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        // \"Access-Control-Allow-Origin\": \"https://backend.partylive.by\",\r\n        \"Content-Type\": \"application/json\",\r\n        // Authorization: origin_data ? \"Bearer \" + origin_data : \"\",\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport default QUERY;\r\n","export const PATH = \"http://194.87.145.192/graphql\";\r\n","import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport styled from \"styled-components\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nconst Button = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 20px;\r\n    color: #3d5170;\r\n    font-weight: 400;\r\n    cursor: pointer;\r\n    color: #3d5170;\r\n    &:hover {\r\n      background-color: #fbfbfb;\r\n      color: #007bff;\r\n    }\r\n  `,\r\n  HeaderTable = styled.div`\r\n    display: flex;\r\n    font-size: 14px;\r\n    flex-direction: row;\r\n  `,\r\n  TableTopText = styled.div`\r\n    margin-right: 20px;\r\n    color: #000;\r\n    font-weight: 700;\r\n  `,\r\n  TrInner = styled.div`\r\n    &:nth-child(odd) {\r\n      background-color: rgba(0, 0, 0, 0.03);\r\n    }\r\n    display: flex;\r\n    font-size: 14px;\r\n    flex-direction: row;\r\n  `;\r\n\r\nconst Tables = ({ length, DATA }) => {\r\n  const [selectedUser, setSelectedUser] = useState(\"\"),\r\n    [modalShow, setModalShow] = useState(false);\r\n\r\n  const MyVerticallyCenteredModal = (props) => (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          <HeaderTable>\r\n            <TableTopText>Appointments</TableTopText>\r\n            <TableTopText>UserId: {selectedUser.id}</TableTopText>\r\n            <TableTopText>\r\n              Name: {selectedUser.profile ? selectedUser.profile.name : \"-\"}\r\n            </TableTopText>\r\n            <TableTopText>\r\n              Email: {selectedUser.profile ? selectedUser.profile.email : \"-\"}\r\n            </TableTopText>\r\n          </HeaderTable>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <table className=\"table mb-0\">\r\n          <thead className=\"bg-light\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"border-0\">\r\n                Id\r\n              </th>\r\n              <th scope=\"col\" className=\"border-0\">\r\n                Master/client\r\n              </th>\r\n              <th scope=\"col\" className=\"border-0\">\r\n                Date\r\n              </th>\r\n              <th scope=\"col\" className=\"border-0\">\r\n                Time\r\n              </th>\r\n              <th scope=\"col\" className=\"border-0\">\r\n                Status\r\n              </th>\r\n              <th scope=\"col\" className=\"border-0\">\r\n                Offers\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {!!modalShow &&\r\n              !!modalShow.length &&\r\n              modalShow.map((el, index) => (\r\n                <tr>\r\n                  <td>{el.id}</td>\r\n                  <td>\r\n                    {el.client\r\n                      ? el.client.profile\r\n                        ? el.client.profile.name\r\n                        : \"-\"\r\n                      : el.master.profile\r\n                      ? el.master.profile.name\r\n                      : \"-\"}\r\n                  </td>\r\n                  <td>{el.date}</td>\r\n                  <td>{el.time.slice(0, 5)}</td>\r\n                  <td>{el.status}</td>\r\n                  <td>\r\n                    {el.offers.length\r\n                      ? el.offers.map((el, i) => (\r\n                          <TrInner>\r\n                            <td scope=\"col\" className=\"border-0\">\r\n                              {el.service.name}\r\n                            </td>\r\n                            <td scope=\"col\" className=\"border-0\">\r\n                              {el.price_by_pack.duration} мин.\r\n                            </td>\r\n                            <td scope=\"col\" className=\"border-0\">\r\n                              {el.price_by_pack.price} руб.\r\n                            </td>\r\n                          </TrInner>\r\n                        ))\r\n                      : \"-\"}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Container fluid className=\"main-content-container px-4\">\r\n      <Row>\r\n        <Col>\r\n          <Card\r\n            small\r\n            className=\"mb-4\"\r\n            style={{ boxShadow: \"0 0 10px 1px rgba(0,0,0,0.2)\" }}\r\n          >\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">\r\n                {DATA && DATA.length\r\n                  ? DATA[0].type === \"Master\"\r\n                    ? \"Таблица мастеров\"\r\n                    : \"Таблица клиентов\"\r\n                  : \"...\"}{\" \"}\r\n                {length ? \"(\" + length + \")\" : null}\r\n              </h6>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n              <table className=\"table mb-0\">\r\n                <thead className=\"bg-light\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Id\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Name\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      About me\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Email\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      City\r\n                    </th>\r\n                    <th scope=\"col\" className=\"border-0\">\r\n                      Appointments\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                {DATA && !!DATA.length && (\r\n                  <tbody>\r\n                    {DATA.map((el, index) => (\r\n                      <tr key={index}>\r\n                        <td>{el.id}</td>\r\n                        <td>\r\n                          {el.profile\r\n                            ? el.profile.name\r\n                              ? el.profile.name\r\n                              : \"-\"\r\n                            : \"-\"}\r\n                        </td>\r\n                        <td>\r\n                          {el.profile\r\n                            ? el.profile.about_me\r\n                              ? el.profile.about_me\r\n                              : \"-\"\r\n                            : \"-\"}\r\n                        </td>\r\n                        <td>\r\n                          {el.profile\r\n                            ? el.profile.email\r\n                              ? el.profile.email\r\n                              : \"-\"\r\n                            : \"-\"}\r\n                        </td>\r\n                        <td>\r\n                          {el.profile\r\n                            ? el.profile.city\r\n                              ? el.profile.city.name\r\n                              : \"-\"\r\n                            : \"-\"}\r\n                        </td>\r\n                        <td>\r\n                          <Button\r\n                            onClick={() => {\r\n                              setModalShow(\r\n                                el.client_appointments.length !== 0\r\n                                  ? el.client_appointments\r\n                                  : el.master_appointments\r\n                              );\r\n                              setSelectedUser(el);\r\n                            }}\r\n                          >\r\n                            {el.client_appointments.length !== 0 ||\r\n                            el.master_appointments.length !== 0\r\n                              ? el.client_appointments.length ||\r\n                                el.master_appointments.length\r\n                              : \"-\"}\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                )}\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      {/* _______________________________________- */}\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport QUERY from \"./query\";\nimport Table from \"./Table\";\n\nconst Header = styled.div`\n    position: fixed;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    top: 0;\n    right: 0;\n    left: 200px;\n    height: 49px;\n    padding-right: 20px;\n    color: #999;\n    background-color: #fff;\n    width: calc(100% - 200px);\n    box-shadow: 0 0.125rem 0.625rem rgb(90 97 105 / 12%);\n  `,\n  HeaderWrap = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 0;\n    height: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1000;\n  `,\n  LeftMenu = styled.div`\n    background-color: #fff;\n    position: fixed;\n    width: 200px;\n    height: 100vh;\n    box-shadow: 0 0.125rem 9.375rem rgb(90 97 105 / 10%),\n      0 0.25rem 0.5rem rgb(90 97 105 / 12%),\n      0 0.9375rem 1.375rem rgb(90 97 105 / 10%),\n      0 0.4375rem 2.1875rem rgb(165 182 201 / 10%);\n  `,\n  LeftMenuHeader = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #5a6169;\n    font-weight: 500;\n    height: 50px;\n    border-bottom: 1px solid #e1e5eb;\n    font-size: 25px;\n  `,\n  UnderLeftMenu = styled.div`\n    width: 200px;\n    height: 100vh;\n  `,\n  Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    background-color: #f5f6f8;\n  `,\n  TableWrap = styled.div`\n    z-index: 0 !important;\n    display: flex;\n    flex: 1;\n    margin-top: 75px;\n  `,\n  Button = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 50px;\n    color: #3d5170;\n    font-weight: 400;\n    cursor: pointer;\n    background-color: ${(props) => (props.active ? \"#fbfbfb\" : \"#fff\")};\n    color: ${(props) => (props.active ? \"#007bff\" : \"#3d5170\")};\n    box-shadow: ${(props) =>\n      props.active ? \"inset 0.1875rem 0 0 #007bff\" : null};\n    &:hover {\n      transition: 0.2s ease all;\n      box-shadow: inset 0.1875rem 0 0 #007bff;\n      background-color: #fbfbfb;\n      color: #007bff;\n    }\n  `;\n\nconst App = () => {\n  const type = { Master: \"Master\", Client: \"Client\" };\n  const [clickedBtn, setClickedBtn] = useState(\"\"),\n    [DATA, setDATA] = useState([]);\n\n  const loadUsers = (usersType) => {\n    QUERY({\n      query: `query {users (type: ${usersType}, first:${100}) { \n        data { \n          id type\n          profile {id city {id name} name email about_me}\n          master_appointments {\n            id date time status\n            offers {\n              description price_by_pack {duration price}\n              service {id name specialization {id name} photos {src}}\n            }\n            client {\n              profile {\n                name email\n              }\n            }\n          }\n          client_appointments {\n            id date time status\n            offers {\n              description price_by_pack {duration price}\n              service {id name specialization {id name} photos {src}}\n            }\n            master {\n              profile {\n                name email\n              }\n            }\n          }\n        } \n      }}`,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setDATA(data.data.users.data);\n      })\n      .catch((err) => {\n        alert(\"error\");\n      });\n  };\n\n  useEffect(() => {\n    setClickedBtn(\"clients\");\n    loadUsers(type.Client);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <LeftMenu>\n          <LeftMenuHeader>Profma</LeftMenuHeader>\n\n          <Button\n            active={clickedBtn === \"clients\"}\n            onClick={() => {\n              setClickedBtn(\"clients\");\n              loadUsers(type.Client);\n            }}\n          >\n            Клиенты\n          </Button>\n          <Button\n            active={clickedBtn === \"masters\"}\n            onClick={() => {\n              setClickedBtn(\"masters\");\n              loadUsers(type.Master);\n            }}\n          >\n            Мастера\n          </Button>\n        </LeftMenu>\n        <UnderLeftMenu />\n        <TableWrap>\n          <HeaderWrap>\n            <Header>Админка PROFMA</Header>\n          </HeaderWrap>\n          <Table length={DATA.length} DATA={DATA} />\n        </TableWrap>\n      </Wrapper>\n\n      {/* <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Name</th>\n                  <th>About me</th>\n                  <th>Email</th>\n                  <th>City</th>\n                  <th>Appointments</th>\n                </tr>\n              </thead>\n              <tbody>\n                {DATA &&\n                  DATA.length &&\n                  DATA.map((el, index) => (\n                    <tr key={index}>\n                      <td>{el.id}</td>\n                      <td>\n                        {el.profile\n                          ? el.profile.name\n                            ? el.profile.name\n                            : \"-\"\n                          : \"-\"}\n                      </td>\n                      <td>\n                        {el.profile\n                          ? el.profile.about_me\n                            ? el.profile.about_me\n                            : \"-\"\n                          : \"-\"}\n                      </td>\n                      <td>\n                        {el.profile\n                          ? el.profile.email\n                            ? el.profile.email\n                            : \"-\"\n                          : \"-\"}\n                      </td>\n                      <td>\n                        {el.profile\n                          ? el.profile.city\n                            ? el.profile.city.name\n                            : \"-\"\n                          : \"-\"}\n                      </td>\n                      <td>\n                        {el.client_appointments.length !== 0 ||\n                        el.master_appointments.length !== 0 ? (\n                          <Button\n                            variant=\"warning\"\n                            onClick={() => {\n                              setModalShow(\n                                el.client_appointments.length !== 0\n                                  ? el.client_appointments\n                                  : el.master_appointments\n                              );\n                              setSelectedUser(el);\n                            }}\n                          >\n                            {el.client_appointments.length ||\n                              el.master_appointments.length}\n                          </Button>\n                        ) : (\n                          \"-\"\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </Table> */}\n      {/* </Container>\n        </div>\n      </div>\n\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n      {isLoading && (\n        <div\n          style={{\n            display: \"flex\",\n            height: \"100vh\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        </div>\n      )} */}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}